= Rubyにおける長寿命オブジェクトに特化した一部世代別GC実装

== 動機

=== 構文木オブジェクトの大量作成
Railsのアプリケーションでのヒープの状態を調べた所，ヒープ内に構文木のオ
ブジェクト（T_NODE）が平均してヒープ内の50％以上を占めている事が分かっ
た．

私はこの結果に少し疑問を持った．

なぜなら，多くの構文木オブジェクトはYARV命令列にコンパイルしてしまえば
不要であり，自然と構文木はGCによって削除されるはずであり，構文木オブジェ
クトはヒープ内にすくないだろうと予想していたからだ．

ヒープ内に多く見られた構文木オブジェクトの種類を大まかな割合と共に以下
に列挙する．
(1) NODE_WHILE  : 50%
(2) NODE_METHOD : 20%
(3) NODE_FBODY  : 13%
(4) NODE_BLOCK  : 10%
(5) NODE_CFUNC  : 5%
(6) NODE_ARRAY  : 2%

これらの構文木オブジェクトが生成されるタイミングを見ると，どうやらYARV
命令列にコンパイルするタイミングではない部分で使用されているようであ
る．

この事から，YARV命令列にコンパイルされた構文木オブジェクトに関しては予
想通り破棄されていそうだが，それ以外の部分で使用された構文木オブジェク
トがヒープ内に多く生存しているのではないかと考えた．

=== 構文木オブジェクト生成位置の特定
多く生存していた構文木オブジェクトの種類毎に，どのタイミングで生成さ
れ，どのように使用されているか調査を行った．

==== NODE_WHILE
一番多かった NODE_WHILE 構文木オブジェクトであるが，これはどうやらVM内
部のインラインキャッシュに使用されているようである．
YARVでは多くのインラインキャッシュが行われている．具体例を挙げるならば
以下のようなものだ．

(1)インラインメソッドキャッシュ
